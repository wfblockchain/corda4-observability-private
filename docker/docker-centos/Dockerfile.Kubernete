FROM azul/zulu-openjdk-centos:8u312

## Add packages, clean cache, create dirs, create corda user and change ownership
# RUN apt-get update && \
#
# Cordapps folder is created in the kubernetes init containter because kubectl cp will need to have access to it
# mkdir -p /opt/corda/cordapps && \
RUN yum install -y bash curl unzip && \
    rm -rf /var/lib/apt/lists/* && \
    mkdir -p /opt/corda/persistence && \
    mkdir -p /opt/corda/artemis && \
    mkdir -p /opt/corda/certificates && \
    mkdir -p /opt/corda/drivers && \
    mkdir -p /opt/corda/logs && \
    mkdir -p /opt/corda/bin && \
    mkdir -p /opt/corda/additional-node-infos && \
    mkdir -p /etc/corda &&  \
    groupadd corda && \
    useradd corda -g corda -m -d /opt/corda && \
    chown -R corda:corda /opt/corda && \ 
    chown -R corda:corda /etc/corda

# ssh server
# Don't forget to run '/usr/sbin/sshd -D' if you actually want to ssh into this container
# RUN yum install -y openssh-server
# RUN ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -N ''
# RUN ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key -N ''
# ADD src/sshd/sshd_config /etc/ssh/sshd_config 
# RUN echo root:welcome1 | chpasswd

# ENV CORDAPPS_FOLDER="/opt/corda/cordapps" \
ENV  PERSISTENCE_FOLDER="/opt/corda/persistence" \
    ARTEMIS_FOLDER="/opt/corda/artemis" \
    CERTIFICATES_FOLDER="/opt/corda/certificates" \
    DRIVERS_FOLDER="/opt/corda/drivers" \
    CONFIG_FOLDER="/opt/corda/config" \
    MY_P2P_PORT=10200 \
    MY_RPC_PORT=10201 \
    MY_RPC_ADMIN_PORT=10202 \
    PATH=$PATH:/opt/corda/bin \
    JVM_ARGS="-XX:+UseG1GC -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap " \
    CORDA_ARGS=""

##CORDAPPS FOLDER
# VOLUME ["/opt/corda/cordapps"]
##PERSISTENCE FOLDER
VOLUME ["/opt/corda/persistence"]
##ARTEMIS FOLDER
VOLUME ["/opt/corda/artemis"]
##CERTS FOLDER
VOLUME ["/opt/corda/certificates"]
##OPTIONAL JDBC DRIVERS FOLDER
VOLUME ["/opt/corda/drivers"]
##LOG FOLDER
VOLUME ["/opt/corda/logs"]
##ADDITIONAL NODE INFOS FOLDER
VOLUME ["/opt/corda/additional-node-infos"]
##CONFIG LOCATION
VOLUME ["/etc/corda"]
##BIN FOLDER
VOLUME ["/opt/corda/bin"]

##CORDA JAR
# COPY --chown=corda:corda corda.jar /opt/corda/bin/corda.jar
COPY --chown=corda:corda corda-4.8.6.jar /opt/corda/bin/corda.jar
##CONFIG MANIPULATOR JAR
# COPY --chown=corda:corda config-exporter.jar /opt/corda/config-exporter.jar
##CONFIG GENERATOR SHELL SCRIPT
# COPY --chown=corda:corda generate-config.sh /opt/corda/bin/config-generator
##CORDA RUN SCRIPT
COPY --chown=corda:corda run-corda.sh /opt/corda/bin/run-corda
COPY --chown=corda:corda start-corda.sh /opt/corda/bin/start-corda
COPY --chown=corda:corda migration.sh /opt/corda/bin/migration
##BASE CONFIG FOR GENERATOR
# COPY --chown=corda:corda starting-node.conf /opt/corda/starting-node.conf

##COPY POSTGRES Driver
COPY --chown=corda:corda /drivers/jmx_prometheus_javaagent-0.16.1.jar /opt/corda/drivers/jmx_prometheus_javaagent-0.16.1.jar 
COPY --chown=corda:corda /drivers/postgresql-42.3.1.jar  /opt/corda/drivers/postgresql-42.3.1.jar  
COPY --chown=corda:corda /drivers/prom_jmx_exporter.yaml /opt/corda/drivers/prom_jmx_exporter.yaml 
USER "corda"
EXPOSE ${MY_P2P_PORT} ${MY_RPC_PORT} ${MY_RPC_ADMIN_PORT}
WORKDIR /opt/corda
# CMD ["run-corda"]
CMD ["sh", "-c", "java -jar /opt/corda/bin/corda.jar run-migration-scripts --core-schemas --app-schemas -f /etc/corda/node.conf && java -jar /opt/corda/bin/corda.jar --base-directory /opt/corda  --config-file /etc/corda/node.conf && sleep 3600"]
# CMD ["sh", "-c", "sleep 3600"]